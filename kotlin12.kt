package com.senti.kotlin

/*
변수, 함수, 클래스의 접근범위와 접근제한자는?

스코프 -> 범위
3가지 규칙
1. 스코프 외부에서는 스코프 내부의 멤버를 참조여난자로만 참조가 가능함 a.eat , import 같은 의미
2. 동일 스코프 내에서는 멤버를 공유할 수 있다.
3. 하위 스코프에서는 상위 스코프의 멤버를 재정의 할 수 있다.

접근제한자  -> 변수 , 함수, 클래스 선언 시 맨 앞에 붙여준다.
public
internal
private
protected

패키지 스코프에서는?
public -> 어떤 패키지에서도 접근 가능 기본값
internal -> 같은 모듈 내에서만 접근 가능
private -> 같은 파일 내에서만 접근 가능
protected는 사용하지 않음

클래스 스코프에서는?
public -> 클래스 외부에서 늘 접근 가능 기본값
private -> 클래스 내부에서만 접근 가능
protected -> 클래스 자신과 상속받은 클래스에서 접근가능
internal은 사용하지 않음
 */

val a = "패키지 스코프"

class B{
    val a = "클래스 스코프"
    fun print(){
        println(a)  //a를 패키지 스코프에서 클래스 스코프로 재정의
    }
}

fun main(){
    val a="함수 스코프"
    println(a)    //동일 스코프 내에서는 멤버를 공유할 수 있기 때문에 a 사용가능, 패키지 스코프에서 함수 스코프로 재정의가 가능
    B().print()     //동일 스코프 내에서는 멤버를 공유할 수 있기 때문에 a 사용가능
}

