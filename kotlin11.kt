package com.senti.kotlin

/*
코틀린 프로젝트의 구조

프로젝트란?
우리가 코틀린으로 어플리케이션을 짤때
관련한 모든 내용을 담는 큰 틀이라고 생각

모듈?
하나의 프로젝트는 여러개의 모듈로 이루어짐
모듈은 직접 만들수도 있고,
필요한 기능을 이미 구현해 둔 라이브러리 모듈을 가져와 붙일 수도 있다.

모듈안에는?
다수의 폴더와 파일들이 있다.
여기에는 코틀린 코드파일 뿐만 아니라 모듈과 관련된 설정 및 리소스 파일도 포함.

물리적인 구조는 모듈안에 논리적인 구조는 패키지로 분리

패키지란?
개발시에 소스코드의 소속을 지정하기 위한 논리적 단위
일반적으로 패키지의 이름을 지을때는
서비스 도메인 -> youtube.com
패키지 명 -> com.youtube.dimo 즉 회사의 도메인을 거꾸로 패키지 명으로 지정하고 그 뒤에 프로젝트 명을 지정
그 후에 아래에 세부기능별로 분류 하도록 한다

com.youtube.dimo
com.youtube.dimo.base
com.youtube.dimo.kotlin
com.youtube.dimo.android
이런 식으로

코드 파일들을 패키지에 넣는 방법은?
코드 파일 맨 윗줄에 package를 적고
패키지 이름을 써 주면 됩니다.

패키지 이름을 써주지 않으면 자동으로 default 패키지로 묶이게 된다.

외부 패키지를 쓰려면 import com.youtube.dimo.base 이런 식으로 선언해줘야 한다.
이때 중복되는 클래스가 있다면 반드시 패키지 명을 import할때 풀네임으로 지정해야한다.


코틀린은 클래스명과 파일명이 일치하지 않아도 되며
하나의 파일에 여러개의 클래스를 넣어도 알아서 컴파일이 가능하다.




 */

fun main(){

}